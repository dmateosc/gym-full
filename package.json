{
  "name": "gym-full-monorepo",
  "private": true,
  "version": "0.0.0",
  "workspaces": [
    "apps/frontend",
    "apps/backend"
  ],
  "scripts": {
    "frontend:dev": "npm run dev --workspace=apps/frontend",
    "frontend:build": "npm run build --workspace=apps/frontend",
    "frontend:lint": "npm run lint --workspace=apps/frontend",
    "frontend:test": "npm run test --workspace=apps/frontend",
    "backend:dev": "npm run start:dev --workspace=apps/backend",
    "backend:build": "npm run build --workspace=apps/backend",
    "backend:lint": "npm run lint --workspace=apps/backend",
    "backend:test": "npm run test --workspace=apps/backend",
    "dev": "concurrently \"npm run frontend:dev\" \"npm run backend:dev\"",
    "lint": "npm run frontend:lint && npm run backend:lint",
    "build": "npm run frontend:build && npm run backend:build",
    "test": "npm run frontend:test && npm run backend:test",
    "install:all": "npm install && npm install --workspace=apps/frontend && npm install --workspace=apps/backend",
    "deploy:frontend": "npm run deploy --workspace=apps/frontend",
    "deploy:backend": "npm run deploy --workspace=apps/backend",
    "deploy:all": "npm run deploy:frontend && npm run deploy:backend",
    "deploy:frontend:fix": "cd apps/frontend && ./deploy-fix.sh",
    "setup-env:frontend": "npm run setup-env --workspace=apps/frontend",
    "setup-env:backend": "npm run setup-env --workspace=apps/backend",
    "docker:build": "docker build -f infra/Dockerfile --target frontend-production -t gymapp-frontend:latest .",
    "docker:build-backend": "docker build -f infra/Dockerfile --target backend-production -t gymapp-backend:latest .",
    "docker:build-all": "npm run docker:build && npm run docker:build-backend",
    "docker:build-dev": "docker build -f infra/Dockerfile --target frontend-development -t gymapp-frontend:dev . && docker build -f infra/Dockerfile --target backend-development -t gymapp-backend:dev .",
    "docker:run": "docker-compose up -d frontend backend",
    "docker:run-dev": "docker-compose --profile dev up -d frontend-dev backend-dev",
    "docker:stop": "docker-compose down",
    "docker:clean": "docker-compose down --rmi all --volumes --remove-orphans",
    "docker:logs": "docker-compose logs -f",
    "docker:logs-frontend": "docker-compose logs -f frontend",
    "docker:logs-backend": "docker-compose logs -f backend",
    "docker:unified:build-all": "./docker-unified.sh build-all",
    "docker:unified:build-frontend": "./docker-unified.sh build-frontend",
    "docker:unified:build-backend": "./docker-unified.sh build-backend",
    "docker:unified:run": "./docker-unified.sh run",
    "docker:unified:run-dev": "./docker-unified.sh run-dev",
    "docker:unified:stop": "./docker-unified.sh stop",
    "docker:unified:clean": "./docker-unified.sh clean",
    "docker:unified:status": "./docker-unified.sh status",
    "docker:unified:test-build": "./docker-unified.sh test-build",
    "vercel:link-frontend": "cd apps/frontend && vercel link",
    "vercel:link-backend": "cd apps/backend && vercel link"
  },
  "devDependencies": {
    "concurrently": "^9.1.0"
  },
  "dependencies": {
    "axios": "^1.11.0"
  }
}
