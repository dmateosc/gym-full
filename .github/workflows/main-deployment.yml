name: 🚀 Production CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_PROJECT_ID_BACKEND: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}

jobs:
  # 🧪 Testing and Linting
  test:
    name: 🧪 Run Tests and Linting
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [frontend, backend]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔍 Lint ${{ matrix.app }}
        run: npm run lint --workspace=apps/${{ matrix.app }}
        continue-on-error: false
        
      - name: 🧪 Test ${{ matrix.app }}
        run: npm run test --workspace=apps/${{ matrix.app }}
        continue-on-error: false
        
      - name: 🏗️ Build ${{ matrix.app }}
        run: npm run build --workspace=apps/${{ matrix.app }}
        continue-on-error: false

  # 🚀 Deploy Backend to Production
  deploy-backend:
    name: 🚀 Deploy Backend to Production
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔧 Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: 🔗 Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/backend
        
      - name: 🏗️ Build Backend for Production
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/backend
        
      - name: 🚀 Deploy Backend to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/backend
        
      - name: 📢 Backend Deployment Success
        run: |
          echo "🎉 Backend deployed successfully to production!"
          echo "🌐 Backend API: https://gym-exercise-backend.vercel.app/api"

  # 🎨 Deploy Frontend to Production
  deploy-frontend:
    name: 🎨 Deploy Frontend to Production
    runs-on: ubuntu-latest
    needs: [test, deploy-backend]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 Install dependencies
        run: npm ci
        
      - name: 🔧 Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: 🔗 Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/frontend
        
      - name: 🏗️ Build Frontend for Production
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/frontend
        env:
          VITE_API_BASE_URL: https://gym-exercise-backend.vercel.app/api
          
      - name: 🚀 Deploy Frontend to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/frontend
        
      - name: 📢 Frontend Deployment Success
        run: |
          echo "🎉 Frontend deployed successfully to production!"
          echo "🌐 Frontend URL: https://gym-full.vercel.app"

  # 📋 Deployment Summary
  summary:
    name: 📋 Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: 📊 Deployment Status
        run: |
          echo "## 🏋️ Gym App Deployment Summary"
          echo "- 🚀 Backend: ${{ needs.deploy-backend.result }}"
          echo "- 🎨 Frontend: ${{ needs.deploy-frontend.result }}"
          echo ""
          if [[ "${{ needs.deploy-backend.result }}" == "success" && "${{ needs.deploy-frontend.result }}" == "success" ]]; then
            echo "✅ Full deployment successful!"
            echo "🌐 App available at: https://gym-full.vercel.app"
            echo "🔗 API available at: https://gym-exercise-backend.vercel.app/api"
          else
            echo "❌ Deployment failed. Check the logs above."
            exit 1
          fi
